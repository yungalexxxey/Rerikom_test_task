version: "3.9"
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
    networks:
      db_net:
        ipv4_address: 172.15.1.10
  kafka:
    image: wurstmeister/kafka
    ports:
     - "9092:9092"
    expose:
     - "9093"
     - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://172.15.1.8:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://172.15.1.8:9093,OUTSIDE://172.15.1.8:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: 172.15.1.10:2181
      KAFKA_CREATE_TOPICS: "topic_test:1:1"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: nc -z 172.15.1.8 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      db_net:
        ipv4_address: 172.15.1.8
  postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "rerikom_db"
      POSTGRES_USER: "rerikom_user"
      POSTGRES_PASSWORD: "pswrd"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./psql_data:/var/lib/postgresql/data
      - ./psql_data:/docker-entrypoint-initdb.d
    expose:
      - "5432"
      - "5450"
    ports:
      - "5450:5432"
    networks:
      db_net:
        ipv4_address: 172.15.1.4

  fastapiservice:
    build: .
    links:
      - postgres
      - kafka
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8000:8000"
    expose:
      - "8000"
    networks:
      db_net:
        ipv4_address: 172.15.1.6
  listener:
    build: Listener/
    links:
      - kafka
    depends_on:
      fastapiservice:
         condition: service_started
    networks:
      db_net:
        ipv4_address: 172.15.1.14
networks:
  db_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.15.1.0/24
